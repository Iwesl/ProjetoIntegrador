/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.projeto.form;

import br.projeto.DAO.OrcamentoDAO;
import br.projeto.DAO.PecaDAO;
import br.projeto.DAO.ServicoDAO;
import br.projeto.DAO.UsuarioDAO;
import br.projeto.DAO.VeiculoDAO;
import br.projeto.data.Cliente;
import br.projeto.data.OS;
import br.projeto.data.Peca;
import br.projeto.data.Usuario;
import br.projeto.data.Veiculo;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Igor
 */
public class FrmOS extends javax.swing.JFrame {

    /**
     * Creates new form FrmOS
     */
    public FrmOS() {
        initComponents();
        addFuncionario();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AbrirOS = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Pesquisar = new javax.swing.JButton();
        Fechar = new javax.swing.JButton();
        Cadastrar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        frmCel1 = new javax.swing.JFormattedTextField();
        frmCel2 = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        frmUsuario = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        frmTotalPecas = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        frmTotalObra = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        frmOrcamentoFinal = new javax.swing.JFormattedTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        RemoverPecaOrcamento = new javax.swing.JButton();
        AtualizaOrcamento = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        frmDefeito = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        frmObs = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        frmStatus = new javax.swing.JComboBox<>();
        LimparCampos = new javax.swing.JButton();
        InserePecas = new javax.swing.JButton();
        LimparPecas = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        Selecionar = new javax.swing.JButton();
        ConsultaPecas = new javax.swing.JButton();
        frmPecas = new javax.swing.JTextField();
        frmPlacaVeiculo = new javax.swing.JTextField();
        frmCliente = new javax.swing.JTextField();
        frmModeloVeiculo = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setFocusCycleRoot(false);
        setResizable(false);

        AbrirOS.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        AbrirOS.setText("Abrir OS");
        AbrirOS.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AbrirOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirOSActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Cliente");

        Pesquisar.setText("Pesquisar");
        Pesquisar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PesquisarActionPerformed(evt);
            }
        });

        Fechar.setText("Fechar");
        Fechar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FecharActionPerformed(evt);
            }
        });

        Cadastrar.setText("Cadastrar");
        Cadastrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarActionPerformed(evt);
            }
        });

        frmCel1.setEditable(false);
        frmCel1.setBackground(java.awt.SystemColor.controlHighlight);
        frmCel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        try {
            frmCel1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        frmCel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        frmCel2.setEditable(false);
        frmCel2.setBackground(java.awt.SystemColor.controlHighlight);
        frmCel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        try {
            frmCel2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        frmCel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Celular 1");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Celular 2");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Veiculo");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Observação");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Descrição do problema");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Peças");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome da Peça", "Preço", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setDropMode(javax.swing.DropMode.ON);
        jTable1.setGridColor(new java.awt.Color(255, 255, 204));
        jTable1.setSelectionBackground(new java.awt.Color(255, 255, 153));
        jTable1.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTable1);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Atendente");

        frmUsuario.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        frmUsuario.setMaximumRowCount(3);
        frmUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        frmUsuario.setSelectedIndex(-1);
        frmUsuario.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        frmTotalPecas.setEditable(false);
        frmTotalPecas.setBackground(new java.awt.Color(255, 255, 204));
        frmTotalPecas.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        frmTotalPecas.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        frmTotalPecas.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        frmTotalPecas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Total das peças:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Mão de obra:");

        frmTotalObra.setEditable(false);
        frmTotalObra.setBackground(new java.awt.Color(255, 255, 204));
        frmTotalObra.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        frmTotalObra.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        frmTotalObra.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        frmTotalObra.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        frmTotalObra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frmTotalObraActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setText("Orçamento final:");

        frmOrcamentoFinal.setEditable(false);
        frmOrcamentoFinal.setBackground(new java.awt.Color(255, 255, 204));
        frmOrcamentoFinal.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        frmOrcamentoFinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getCurrencyInstance())));
        frmOrcamentoFinal.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        frmOrcamentoFinal.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jScrollPane5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome da Peça", "Preço", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.setDropMode(javax.swing.DropMode.ON);
        jTable3.setGridColor(new java.awt.Color(255, 255, 204));
        jTable3.setSelectionBackground(new java.awt.Color(255, 255, 153));
        jTable3.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTable3.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTable3.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable3PropertyChange(evt);
            }
        });
        jScrollPane5.setViewportView(jTable3);

        RemoverPecaOrcamento.setBackground(new java.awt.Color(255, 255, 255));
        RemoverPecaOrcamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/projeto/assets/iconmonstr-x-mark-cinza.png"))); // NOI18N
        RemoverPecaOrcamento.setToolTipText("Remove ltens do orçamento");
        RemoverPecaOrcamento.setAlignmentX(0.5F);
        RemoverPecaOrcamento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RemoverPecaOrcamento.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/br/projeto/assets/iconmonstr-x-mark-vermelho.png"))); // NOI18N
        RemoverPecaOrcamento.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/br/projeto/assets/iconmonstr-x-mark-vermelho.png"))); // NOI18N
        RemoverPecaOrcamento.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/br/projeto/assets/iconmonstr-x-mark-vermelho.png"))); // NOI18N
        RemoverPecaOrcamento.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/br/projeto/assets/iconmonstr-x-mark-2.png"))); // NOI18N
        RemoverPecaOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoverPecaOrcamentoActionPerformed(evt);
            }
        });

        AtualizaOrcamento.setBackground(new java.awt.Color(255, 255, 255));
        AtualizaOrcamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/projeto/assets/checkverde.png"))); // NOI18N
        AtualizaOrcamento.setToolTipText("Atualiza o orçamento");
        AtualizaOrcamento.setAlignmentX(0.5F);
        AtualizaOrcamento.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AtualizaOrcamento.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/br/projeto/assets/checkverde.png"))); // NOI18N
        AtualizaOrcamento.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/br/projeto/assets/checkverde.png"))); // NOI18N
        AtualizaOrcamento.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/br/projeto/assets/checkverde.png"))); // NOI18N
        AtualizaOrcamento.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/br/projeto/assets/iconmonstr-x-mark-2.png"))); // NOI18N
        AtualizaOrcamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AtualizaOrcamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(frmOrcamentoFinal)
                            .addComponent(frmTotalObra)
                            .addComponent(frmTotalPecas, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(AtualizaOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RemoverPecaOrcamento, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(RemoverPecaOrcamento)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(frmTotalPecas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(frmTotalObra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addGap(16, 16, 16)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(frmOrcamentoFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(AtualizaOrcamento))))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        frmDefeito.setColumns(7);
        frmDefeito.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        frmDefeito.setLineWrap(true);
        frmDefeito.setRows(5);
        frmDefeito.setWrapStyleWord(true);
        jScrollPane3.setViewportView(frmDefeito);

        frmObs.setColumns(7);
        frmObs.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        frmObs.setLineWrap(true);
        frmObs.setRows(5);
        frmObs.setWrapStyleWord(true);
        jScrollPane4.setViewportView(frmObs);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Status da Ordem de Serviço:");

        frmStatus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        frmStatus.setMaximumRowCount(3);
        frmStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AGUARDANDO", "FINALIZADA", "NÃO AUTORIZADA" }));
        frmStatus.setSelectedIndex(-1);
        frmStatus.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        frmStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frmStatusActionPerformed(evt);
            }
        });

        LimparCampos.setText("Limpar Todos os Campos");
        LimparCampos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparCamposActionPerformed(evt);
            }
        });

        InserePecas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        InserePecas.setText("Inserir Peça no Orçamento");
        InserePecas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        InserePecas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InserePecasActionPerformed(evt);
            }
        });

        LimparPecas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        LimparPecas.setForeground(new java.awt.Color(51, 51, 51));
        LimparPecas.setText("Limpar Peças");
        LimparPecas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LimparPecas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparPecasActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Placa do veículo");

        Selecionar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Selecionar.setText("Selecionar");
        Selecionar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Selecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelecionarActionPerformed(evt);
            }
        });

        ConsultaPecas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        ConsultaPecas.setText("Consultar");
        ConsultaPecas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ConsultaPecas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConsultaPecasActionPerformed(evt);
            }
        });

        frmPecas.setBackground(new java.awt.Color(255, 255, 204));
        frmPecas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        frmPlacaVeiculo.setBackground(new java.awt.Color(255, 255, 204));
        frmPlacaVeiculo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        frmCliente.setBackground(java.awt.SystemColor.controlHighlight);
        frmCliente.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        frmCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        frmModeloVeiculo.setBackground(java.awt.SystemColor.controlHighlight);
        frmModeloVeiculo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        frmModeloVeiculo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(51, 51, 51));
        jLabel10.setText("(Opcional)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(frmPlacaVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(Selecionar))
                                .addGap(86, 86, 86)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(frmCliente)
                                    .addComponent(frmModeloVeiculo, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(frmCel1))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(frmCel2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(frmPecas)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ConsultaPecas))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(InserePecas)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(LimparPecas))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel10))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel13)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 917, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(frmStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Cadastrar)
                                .addGap(18, 18, 18)
                                .addComponent(AbrirOS)
                                .addGap(18, 18, 18)
                                .addComponent(Pesquisar)
                                .addGap(18, 18, 18)
                                .addComponent(LimparCampos)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(frmUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(86, 86, 86))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(Fechar)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(frmPlacaVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Selecionar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel1)
                                .addComponent(frmCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12)
                                .addComponent(frmModeloVeiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(frmCel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel8))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(frmCel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)))))
                .addGap(25, 25, 25)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ConsultaPecas, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(frmPecas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InserePecas)
                    .addComponent(LimparPecas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(frmUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(frmStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Fechar)
                    .addComponent(Pesquisar)
                    .addComponent(AbrirOS)
                    .addComponent(Cadastrar)
                    .addComponent(LimparCampos))
                .addGap(21, 21, 21))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarActionPerformed
        String[] options = {"Clientes", "Peças", "Veículos", "Usuários"};
        int cadastrar = JOptionPane.showOptionDialog(this, "Que tipo de cadastro deseja fazer?", "ATENÇÃO", JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);

        switch (cadastrar + 1) {
            case 1:
                FrmClientes cl = new FrmClientes();
                cl.setVisible(true);
                break;
            case 2:
                FrmPecas p = new FrmPecas();
                p.setVisible(true);
                break;
            case 3:
                FrmVeiculos v = new FrmVeiculos();
                v.setVisible(true);
                break;
            case 4:
                FrmUsuarios u = new FrmUsuarios();
                u.setVisible(true);
                break;
            default:
            // não faz nada
        }
    }//GEN-LAST:event_CadastrarActionPerformed

    private void FecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_FecharActionPerformed

    private void LimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparCamposActionPerformed
        frmPlacaVeiculo.setText("");
        frmCliente.setText("");
        frmCel1.setText("");
        frmCel2.setText("");
        frmUsuario.setSelectedIndex(-1);
        frmUsuario.removeAllItems();
        frmModeloVeiculo.setText("");
        frmPecas.setText("");
        frmStatus.setSelectedIndex(-1);
        frmTotalPecas.setText("");
        frmTotalObra.setText("");
        frmOrcamentoFinal.setText("");
        frmDefeito.setText("");
        frmObs.setText("");
        addFuncionario();
        frmUsuario.setSelectedIndex(-1);

        DefaultTableModel modeloTabela = (DefaultTableModel) jTable1.getModel();
        DefaultTableModel modeloTabela3 = (DefaultTableModel) jTable3.getModel();
        // coloca a tabela em uma variável do tipo DefaultTableModel, que permite a modelagem dos dados da tabela

        for (int i = modeloTabela.getRowCount() - 1; i >= 0; i--) {
            modeloTabela.removeRow(i);
            // loop que limpa a tabela
        }
        for (int i = modeloTabela3.getRowCount() - 1; i >= 0; i--) {
            modeloTabela3.removeRow(i);
            // loop que limpa a tabela
        }

    }//GEN-LAST:event_LimparCamposActionPerformed

    private void frmStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frmStatusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_frmStatusActionPerformed

    private void LimparPecasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparPecasActionPerformed
        frmPecas.setText("");

        DefaultTableModel modeloTabela = (DefaultTableModel) jTable1.getModel();
        // coloca a tabela em uma variável do tipo DefaultTableModel, que permite a modelagem dos dados da tabela

        for (int i = modeloTabela.getRowCount() - 1; i >= 0; i--) {
            modeloTabela.removeRow(i);
            // loop que limpa a tabela
        }
    }//GEN-LAST:event_LimparPecasActionPerformed

    private void InserePecasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InserePecasActionPerformed
        addPecas();
    }//GEN-LAST:event_InserePecasActionPerformed

    private void SelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelecionarActionPerformed
        addClienteVeiculo();
    }//GEN-LAST:event_SelecionarActionPerformed

    private void ConsultaPecasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConsultaPecasActionPerformed
        listaPecas();
    }//GEN-LAST:event_ConsultaPecasActionPerformed

    private void jTable3PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable3PropertyChange
////        DefaultTableModel modeloTabela3 = (DefaultTableModel) jTable3.getModel();
////        modeloTabela3.addTableModelListener(new TableModelListener() {
////            @Override
////            public void tableChanged(TableModelEvent e) {
////               jTable3.selectAll();
////               atualizarOrcamento();
////            }
////        });
    }//GEN-LAST:event_jTable3PropertyChange

    private void RemoverPecaOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoverPecaOrcamentoActionPerformed
        removerLinhaOrcamento();
    }//GEN-LAST:event_RemoverPecaOrcamentoActionPerformed

    private void frmTotalObraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frmTotalObraActionPerformed

    }//GEN-LAST:event_frmTotalObraActionPerformed

    private void AtualizaOrcamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AtualizaOrcamentoActionPerformed
        jTable3.selectAll();
        atualizarOrcamento();
    }//GEN-LAST:event_AtualizaOrcamentoActionPerformed

    private void PesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PesquisarActionPerformed
        FrmServicos s = new FrmServicos();
        s.setVisible(true);
    }//GEN-LAST:event_PesquisarActionPerformed

    private void AbrirOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirOSActionPerformed
        abrirOrdemServico();
    }//GEN-LAST:event_AbrirOSActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmOS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmOS().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AbrirOS;
    private javax.swing.JButton AtualizaOrcamento;
    private javax.swing.JButton Cadastrar;
    private javax.swing.JButton ConsultaPecas;
    private javax.swing.JButton Fechar;
    private javax.swing.JButton InserePecas;
    private javax.swing.JButton LimparCampos;
    private javax.swing.JButton LimparPecas;
    private javax.swing.JButton Pesquisar;
    private javax.swing.JButton RemoverPecaOrcamento;
    private javax.swing.JButton Selecionar;
    private javax.swing.JFormattedTextField frmCel1;
    private javax.swing.JFormattedTextField frmCel2;
    private javax.swing.JTextField frmCliente;
    private javax.swing.JTextArea frmDefeito;
    private javax.swing.JTextField frmModeloVeiculo;
    private javax.swing.JTextArea frmObs;
    private javax.swing.JFormattedTextField frmOrcamentoFinal;
    private javax.swing.JTextField frmPecas;
    private javax.swing.JTextField frmPlacaVeiculo;
    private javax.swing.JComboBox<String> frmStatus;
    private javax.swing.JFormattedTextField frmTotalObra;
    private javax.swing.JFormattedTextField frmTotalPecas;
    private javax.swing.JComboBox<String> frmUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
    private final static LocalDate DataAtual = LocalDate.now();
    
    public void abrirOrdemServico() {
        OS os = new OS();
        ServicoDAO sDAO = new ServicoDAO();

        if (frmModeloVeiculo.getText().isEmpty()
                || frmDefeito.getText().isEmpty()
                || frmTotalPecas.getText().isEmpty()
                || frmTotalObra.getText().isEmpty()
                || frmOrcamentoFinal.getText().isEmpty()
                || jTable3.getSelectedRowCount() == -1
                || frmStatus.getSelectedItem().equals(-1)
                || frmUsuario.getSelectedItem().equals(-1)){
            JOptionPane.showMessageDialog(this, "Complete todos os campos.", "Cadastro de Ordem de Serviço", JOptionPane.WARNING_MESSAGE);
        } else { // pega os dados dos campos e os coloca nas variáveis desejadas

            String stringUsr = frmUsuario.getSelectedItem().toString(); // pega o item selecionado do JComboBox e colona em uma String
            String[] splitUsr = stringUsr.split("---"); // separa o ID do usuário e o nome do usuário em uma array
            int idUsuario = Integer.parseInt(splitUsr[0]); // coloca o ID do cliente em uma variável int
            String nomeUsuario = splitUsr[1];

            String stringCl = frmCliente.getText(); // pega o item selecionado do JComboBox e colona em uma String
            String[] splitCl = stringCl.split("---"); // separa o ID do usuário e o nome do usuário em uma array
            int idCliente = Integer.parseInt(splitCl[0]); // coloca o ID do cliente em uma variável int
            String nomeCliente = splitCl[1];

            int[] selectedRow = jTable3.getSelectedRows();

            for (int i = selectedRow.length - 1; i >= 0; i--) {
                selectedId = (int) jTable3.getValueAt(jTable3.convertRowIndexToModel(selectedRow[i]), 0);
                selectedNome = (String) jTable3.getValueAt(jTable3.convertRowIndexToModel(selectedRow[i]), 1);
                selectedQtd = (int) jTable3.getValueAt(jTable3.convertRowIndexToModel(selectedRow[i]), 3);
            }

            try {
                os.setNumero_OS(+1);
                os.setNomeUsuario_OS(nomeUsuario);
                os.setIdUsuario_OS(idUsuario);
                os.setNomeCliente_OS(nomeCliente);
                os.setIdCliente_OS(idCliente);
                os.setNomePeca_OS(selectedNome);
                os.setIdPeca_OS(selectedId);
                os.setDataAbertura_OS(Date.valueOf(DataAtual));
                if(verificaStatus(frmStatus.getSelectedItem().toString())){ // se o status estiver finalizado
                    os.setDataFechamento_OS(Date.valueOf(DataAtual));      // define a data de fechamento
                } else {                                                  // se não
                    os.setDataFechamento_OS(null);                       // não define
                }
                os.setDefeito_OS(frmDefeito.getText());
                os.setObs_OS(frmObs.getText());
                os.setValorTotal_OS(Double.parseDouble(frmOrcamentoFinal.getText().replace("R$ ", "").replace(",", "")));
                os.setStatus_OS(frmStatus.getSelectedItem().toString());

                sDAO.inserir(os); // faz a inserção no banco de dados dos dados que agora estão nas variáveis

                try {
                    if (sDAO.verificaOS(os)) {
                        JOptionPane.showMessageDialog(this, "Cadastro efetuado com sucesso!", "Cadastro de Clientes", JOptionPane.INFORMATION_MESSAGE);
                        // limpa os campos
                        LimparCampos.doClick();
                    }
                } catch (SQLException ex) {
                    os.setNumero_OS(-1);
                    JOptionPane.showMessageDialog(this, "Erro no processo!\n" + ex.getMessage(), "Verificação de Ordem de Serviço", JOptionPane.ERROR);
                }

            } catch (SQLException ex) {
                os.setNumero_OS(-1);
                JOptionPane.showMessageDialog(this, "Erro no processo!\n" + ex.getMessage(), "Cadastro de Ordem de Serviço", JOptionPane.ERROR);
            }
        }

    }

    public static final boolean verificaStatus(String status) {
        boolean res=false;
        if(status=="FINALIZADA"){
            res=true;
        }
        return res;
    }


    public void listaPecas() {
        try {
            PecaDAO pDAO = new PecaDAO();

            DefaultTableModel modeloTabela = (DefaultTableModel) jTable1.getModel();
            // coloca a tabela em uma variável do tipo DefaultTableModel, que permite a modelagem dos dados da tabela

            if (frmPecas.getText().isEmpty()) {

                ArrayList<Peca> todasp = pDAO.consultaTodasPecas();

                for (int i = modeloTabela.getRowCount() - 1; i >= 0; i--) {
                    modeloTabela.removeRow(i);
                    // loop que limpa a tabela antes de ser atualizada
                }
                for (int i = 0; i < todasp.size(); i++) {
                    // loop que pega os dados e insere na tabela
                    Object[] dados = new Object[4]; // instancia os objetos. Cada objeto representa um atributo
                    dados[0] = todasp.get(i).getId_pecas();
                    dados[1] = todasp.get(i).getNome_pecas();
                    dados[2] = todasp.get(i).getValor_pecas();
                    dados[3] = todasp.get(i).getQuantidade_pecas();

                    // pega os dados salvos do banco de dados (que estão nas variáveis) e os coloca nos objetos definidos
                    modeloTabela.addRow(dados); // insere uma linha nova a cada item novo encontrado na tabela do BD
                }
            } else {
                ArrayList<Peca> p = pDAO.consultaValorPecas(frmPecas.getText());

                for (int i = modeloTabela.getRowCount() - 1; i >= 0; i--) {
                    // loop que limpa a tabela antes de ser atualizada

                    modeloTabela.removeRow(i);
                }
                for (int i = 0; i < p.size(); i++) {
                    // loop que pega os dados e insere na tabela
                    Object[] dados = new Object[4]; // instancia os objetos. Cada objeto representa um atributo
                    dados[0] = p.get(i).getId_pecas();
                    dados[1] = p.get(i).getNome_pecas();
                    dados[2] = p.get(i).getValor_pecas();
                    dados[3] = p.get(i).getQuantidade_pecas();

                    // pega os dados salvos do banco de dados (que estão nas variáveis) e os coloca nos objetos definidos
                    modeloTabela.addRow(dados); // insere uma linha nova a cada item novo encontrado na tabela do BD
                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro no processo!\n" + ex.getMessage(), "Consulta de Peças", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void addPecas() {
        DefaultTableModel modeloTabela3 = (DefaultTableModel) jTable3.getModel();

        int selectedId = 0;
        String selectedNome = null;
        double selectedValor = 0;
        int selectedQtd = 0;

        int qtdLinhasSelecionadas = jTable1.getSelectedRowCount();
        int[] selectedRow = jTable1.getSelectedRows();

        for (int i = selectedRow.length - 1; i >= 0; i--) {

            // loop para pegar os dados de cada linha na tabela
            selectedId = (int) jTable1.getValueAt(jTable1.convertRowIndexToModel(selectedRow[i]), 0);
            selectedNome = (String) jTable1.getValueAt(jTable1.convertRowIndexToModel(selectedRow[i]), 1);
            selectedValor = (double) jTable1.getValueAt(jTable1.convertRowIndexToModel(selectedRow[i]), 2);
            selectedQtd = (int) jTable1.getValueAt(jTable1.convertRowIndexToModel(selectedRow[i]), 3);
        }

        for (int i = 0; i < qtdLinhasSelecionadas; i++) {

            // loop que pega os dados e insere na tabela
            Object[] dados = new Object[4]; // instancia os objetos. Cada objeto representa um atributo
            dados[0] = selectedId;
            dados[1] = selectedNome;
            dados[2] = selectedValor;
            dados[3] = selectedQtd;
            modeloTabela3.addRow(dados); // insere uma linha nova a cada item novo encontrado na tabela do BD
        }
        //System.out.println("Nome " + selectedNome + "\nValor " + selectedValor + "\nQuantidade " + selectedQtd);
    }

    private int selectedId;
    private String selectedNome;
    private double selectedValor;
    private int selectedQtd;

    private static double valorTotalPecas = 0;
    private static double maoDeObra = 100;
    private static double orcamento = 0;

    public void atualizarOrcamento() {

        Object[] dados = new Object[4]; // instancia os objetos. Cada objeto representa um atributo
        dados[0] = 0;
        dados[1] = 0;
        dados[2] = 0;
        dados[3] = 0;

        frmTotalPecas.setValue(dados[0]);
        frmTotalObra.setValue(dados[1]);
        frmOrcamentoFinal.setValue(dados[2]);

        int[] selectedRow = jTable3.getSelectedRows();
        int qtdLinhasSelecionadas = jTable3.getSelectedRowCount();

        for (int i = selectedRow.length - 1; i >= 0; i--) {

            selectedNome = (String) jTable3.getValueAt(jTable3.convertRowIndexToModel(selectedRow[i]), 1);
            selectedValor = (double) jTable3.getValueAt(jTable3.convertRowIndexToModel(selectedRow[i]), 2);
            selectedQtd = (int) jTable3.getValueAt(jTable3.convertRowIndexToModel(selectedRow[i]), 3);

            totalPecas();
            totalObra();
            totalOrcamento();
            printResultado();

        }
    }

    public final double totalPecas() {
        //for (int i = selectedQtd.size() - 1; i >= 0; i--) {
            valorTotalPecas = selectedQtd * selectedValor;
        //}
        return valorTotalPecas;
    }

    public final double totalObra() {
        //for (int i = selectedQtd.size() - 1; i >= 0; i--) {
            for (int j = 0; j <= selectedQtd; j++) {
                maoDeObra *= 1.1;
            }
        //}
        return maoDeObra;
    }

    public final double totalOrcamento() {
        orcamento =  valorTotalPecas + maoDeObra;
        return orcamento;
    }

    public final void printResultado() {

        Object[] dados = new Object[3]; // instancia os objetos. Cada objeto representa um atributo
        dados[0] = valorTotalPecas;
        dados[1] = maoDeObra;
        dados[2] = orcamento;

        frmTotalPecas.setValue(dados[0]);
        frmTotalObra.setValue(dados[1]);
        frmOrcamentoFinal.setValue(dados[2]);
    }

    public void removerLinhaOrcamento() {
        DefaultTableModel modeloTabela3 = (DefaultTableModel) jTable3.getModel();
        int qtdLinhasSelecionadas = jTable3.getSelectedRowCount();
        int[] selectedRow = jTable1.getSelectedRows();
        int joptionpane = 1;

        if (modeloTabela3.getRowCount() == qtdLinhasSelecionadas) {
            joptionpane = JOptionPane.showConfirmDialog(this, "Você tem certeza que deseja remover todas as peças do orçamento?", "ATENÇÃO", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION);
            if (joptionpane == 0) {
                for (int i = selectedRow.length - 1; i >= 0; i--) {
                    modeloTabela3.removeRow(i);
                }
                frmTotalPecas.setText("");
                frmTotalObra.setText("");
                frmOrcamentoFinal.setText("");
            } else {
                // não faz nada
            }
        } else {
            joptionpane = JOptionPane.showConfirmDialog(this, "Você tem certeza que deseja remover essa peça do orçamento?", "ATENÇÃO", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION);
            if (joptionpane == 0) {
                for (int i = selectedRow.length - 1; i >= 0; i--) {
                    modeloTabela3.removeRow(i);
                }
            } else {
                // não faz nada
            }
        }
    }

    public final void addFuncionario() {
        UsuarioDAO uDAO = new UsuarioDAO();
        frmUsuario.removeAllItems(); // remove todos os itens do JComboBox antes de inserir novos
        String nome;
        int id;
        try {
            ArrayList<Usuario> todosf = uDAO.consultaTodos(); // instancia o método em u arraylist
            for (int i = 0; i < todosf.size(); i++) {
                // loop que pega os dados e insere na tabela

                nome = todosf.get(i).getNome_usuario(); // pega o nome do usuário
                id = todosf.get(i).getId_usuario(); // pega o id do usuario

                frmUsuario.addItem(id + "---" + nome.toUpperCase()); // insere uma linha nova a cada item novo encontrado na tabela do BD
            }
            frmUsuario.setSelectedIndex(-1);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro no processo!\n" + ex.getMessage(), "Consulta", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public final void addClienteVeiculo() {
        if (frmPlacaVeiculo.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Digite a placa do veículo.", "Consulta de OS", JOptionPane.WARNING_MESSAGE);
        } else {
            try {
                VeiculoDAO vDAO = new VeiculoDAO(); // instancia a classe 
                ArrayList<Cliente> v = vDAO.consultaClienteOSPlaca(frmPlacaVeiculo.getText()); // coloca o método dentro da variável

                frmCliente.setText("");
                frmCel1.setText("");
                frmCel2.setText("");
                frmModeloVeiculo.setText("");

                int id;
                String nomeCliente;
                long celular1;
                long celular2;
                String modeloVeiculo;

                for (int i = 0; i < v.size(); i++) {
                    // loop que pega os dados e insere na tabela

                    id = v.get(i).getId_cliente();
                    nomeCliente = v.get(i).getNome_cliente();
                    celular1 = v.get(i).getCelular1_cliente();
                    celular2 = v.get(i).getCelular2_cliente();
                    modeloVeiculo = v.get(i).getModelo_veiculo();
                    // pega os dados salvos do banco de dados (que estão nas variáveis) e os coloca nos objetos definidos

                    frmCliente.setText(id + "---" + nomeCliente);
                    frmCel1.setValue(celular1);
                    if (celular2 == 0) {
                        frmCel2.setValue("");
                    } else {
                        frmCel2.setValue(celular2);
                    }
                    frmModeloVeiculo.setText(modeloVeiculo);
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(this, "Erro no processo!\n" + ex.getMessage(), "Consultas", JOptionPane.ERROR_MESSAGE);
            } catch (Exception ex) {
                Logger.getLogger(FrmPesquisar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
