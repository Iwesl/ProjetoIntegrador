/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.projeto.form;

import br.projeto.DAO.ClienteDAO;
import br.projeto.DAO.PesquisaDAO;
import br.projeto.data.Cliente;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Igor
 */
public class FrmPesquisar extends javax.swing.JFrame {

    /**
     * Creates new form FrmClientes
     */
    public FrmPesquisar() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        frmCPFcliente = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        AbrirOS = new javax.swing.JButton();
        Alterar = new javax.swing.JButton();
        Pesquisar = new javax.swing.JButton();
        Excluir = new javax.swing.JButton();
        Fechar = new javax.swing.JButton();
        Cadastrar = new javax.swing.JButton();
        LimparCampos = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("CPF");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "CPF", "Celular1", "Celular2", "Endereço", "Veículo", "Data Entrada"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        AbrirOS.setText("Abrir OS");

        Alterar.setText("Alterar");

        Pesquisar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Pesquisar.setText("Pesquisar");
        Pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PesquisarActionPerformed(evt);
            }
        });

        Excluir.setText("Excluir");

        Fechar.setText("Fechar");
        Fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FecharActionPerformed(evt);
            }
        });

        Cadastrar.setText("Cadastrar");
        Cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CadastrarActionPerformed(evt);
            }
        });

        LimparCampos.setText("Limpar Campos");
        LimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparCamposActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Obs: deixe o campo vazio e clique em Pesquisar para listar todos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(frmCPFcliente, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(634, Short.MAX_VALUE))
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Cadastrar)
                        .addGap(18, 18, 18)
                        .addComponent(AbrirOS)
                        .addGap(18, 18, 18)
                        .addComponent(Alterar)
                        .addGap(18, 18, 18)
                        .addComponent(Pesquisar)
                        .addGap(18, 18, 18)
                        .addComponent(Excluir)
                        .addGap(18, 18, 18)
                        .addComponent(LimparCampos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                        .addComponent(Fechar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(7, 7, 7)
                .addComponent(frmCPFcliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Fechar)
                    .addComponent(Excluir)
                    .addComponent(Pesquisar)
                    .addComponent(Alterar)
                    .addComponent(AbrirOS)
                    .addComponent(Cadastrar)
                    .addComponent(LimparCampos))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void FecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FecharActionPerformed
        this.dispose();
    }//GEN-LAST:event_FecharActionPerformed

    private void CadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CadastrarActionPerformed

    }//GEN-LAST:event_CadastrarActionPerformed

    private void LimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparCamposActionPerformed
        frmCPFcliente.setText("");
    }//GEN-LAST:event_LimparCamposActionPerformed

    private void PesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PesquisarActionPerformed
        if (frmCPFcliente.getText().isEmpty()) {
            PesquisaDAO pDAO = new PesquisaDAO();
            try {
                pDAO.consultaTodos();
            } catch (SQLException ex) {
                Logger.getLogger(FrmPesquisar.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_PesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPesquisar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPesquisar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPesquisar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPesquisar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmPesquisar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AbrirOS;
    private javax.swing.JButton Alterar;
    private javax.swing.JButton Cadastrar;
    private javax.swing.JButton Excluir;
    private javax.swing.JButton Fechar;
    private javax.swing.JButton LimparCampos;
    private javax.swing.JButton Pesquisar;
    private javax.swing.JTextField frmCPFcliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
public void buscaClientes() {
        try {
            ClienteDAO cDAO = new ClienteDAO(); // instancia a classe ProdutoDB()
            ArrayList<Cliente> cl = PesquisaDAO.consultaTodos(); // coloca o método dentro da variável
            

            DefaultTableModel modeloTabela = (DefaultTableModel) jTable1.getModel();
            // coloca a tabela em uma variável do tipo DefaultTableModel, que permite a modelagem dos dados da tabela

            for (int i = modeloTabela.getRowCount() - 1; i >= 0; i--) {
                modeloTabela.removeRow(i);
                // loop que limpa a tabela antes de ser atualizada
            }

            for (int i = 0; i < cl.size(); i++) {
                // loop que pega os dados e insere na tabela
                Object[] dados = new Object[8]; // instancia os objetos. Cada objeto representa um atributo 
                dados[0] = cl.get(i).getId_cliente();
                dados[1] = cl.get(i).getNome_cliente();
                dados[2] = cl.get(i).getCpf_cliente();
                dados[3] = cl.get(i).getCelular1_cliente();
                dados[4] = cl.get(i).getCelular2_cliente();
                dados[5] = cl.get(i).getEndereco_cliente();
                dados[6] = cl.get(i).getDataEntrada_cliente();
                dados[7] = cl.get(i).getId_veiculo();
                // pega os dados salvos do banco de dados (que estão nas variáveis) e os coloca nos objetos definidos

                modeloTabela.addRow(dados); // insere uma linha nova a cada item novo encontrado na tabela do BD
            }
            /* 
                *** abaixo uma forma alternativa, sem o uso da tabela e sim de uma janela para cada produto ***
            
            for (int i=0; i<produtos.size(); i++) {
                JOptionPane.showMessageDialog(null, "ID do Produto:"
                + produtos.get(i).getId()+ "\n\n"
                +"Nome: "+ produtos.get(i).getNome()+ "\n\n"
                +"Quantidade: "+ produtos.get(i).getQuantidade()+ "\n\n"
                +"Valor: R$"+ produtos.get(i).getValor()+ "\n\n"
                +"Uidade de Medida: "+ produtos.get(i).getMedida()+ "\n\n"
                +"Validade: "+ produtos.get(i).getValidade()+ "\n\n\n"
                +"("+(i+1)+" de "+produtos.size()+")");
            }
             */
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Falha na operação.\nErro: " + ex.getMessage());
        } catch (Exception ex) {
            Logger.getLogger(FrmPesquisar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
